USE ROLE <% ctx.env.finops_db_admin_role%>;
USE DATABASE <% ctx.env.finops_acct_db %>;
USE SCHEMA <% ctx.env.finops_acct_schema %>;
CREATE TRANSIENT TABLE IF NOT EXISTS SF_QUERY_COST_PARAMETERS 
    (PARAMETER_NAME VARCHAR, 
    PARAM_VALUE_TIMESTAMP TIMESTAMP_LTZ, 
    PARAM_VALUE_STRING VARCHAR);


 --Initialize the high water mark for the query_cost_parameters table data from query_history:
INSERT INTO SF_QUERY_COST_PARAMETERS (
    PARAMETER_NAME,
    PARAM_VALUE_TIMESTAMP
    )
SELECT 
    x.$1,
    x.$2
FROM
VALUES (
    'query_start_time' ,
    CURRENT_DATE () - 31 --For first time run, change to any value up to -365.
    ) X
LEFT JOIN SF_QUERY_COST_PARAMETERS P ON P.PARAMETER_NAME = X.$1
WHERE p.PARAMETER_NAME IS NULL;


CREATE TRANSIENT TABLE IF NOT EXISTS SF_CREDITS_BY_QUERY
    (    
    QUERY_ID VARCHAR(50), 
    START_SLICE TIMESTAMP_LTZ(9), 
    ADJUSTED_START_TIME TIMESTAMP_LTZ(9), 
    START_TIME TIMESTAMP_LTZ(6), 
    END_TIME TIMESTAMP_LTZ(6), 
    QUERY_TYPE VARCHAR(100), 
    QUERY_TEXT VARCHAR(16777216), 
    QUERY_TAG VARCHAR(8000), 
    SQL_HASH VARCHAR(100), 
    DATABASE_ID NUMBER(38, 0), 
    DATABASE_NAME VARCHAR(400), 
    SCHEMA_NAME VARCHAR(400), 
    SESSION_ID NUMBER(38, 0), 
    USER_NAME VARCHAR(200), 
    ROLE_NAME VARCHAR(200), 
    WAREHOUSE_NAME VARCHAR(200), 
    WAREHOUSE_ID NUMBER(38, 0), 
    WAREHOUSE_SIZE VARCHAR(50), 
    WAREHOUSE_TYPE VARCHAR(50), 
    WAREHOUSE_WEIGHT NUMBER(38, 4), 
    QUERY_LOAD_PERCENT NUMBER(38, 0), 
    CLUSTER_NUMBER NUMBER(38, 0), 
    QAS_BYTES_USED NUMBER(38, 0), 
    TOTAL_ELAPSED_TIME NUMBER(38, 0), 
    TOTAL_QUEUE_TIME NUMBER(38, 0), 
    TRANSACTION_BLOCKED_TIME NUMBER(38, 0), 
    DERIVED_ELAPSED_TIME_MS NUMBER(38, 0), 
    ELAPSED_TIME_RATIO NUMBER(38, 4), 
    ALLOCATED_CREDITS_USED NUMBER(38, 4), 
    ALLOCATED_CREDITS_USED_COMPUTE NUMBER(38, 4), 
    ALLOCATED_CREDITS_USED_CLOUD_SERVICES NUMBER(38, 4), 
    ALLOCATED_CREDITS_USED_QAS NUMBER(38, 4));
	
CREATE TRANSIENT TABLE IF NOT EXISTS SF_WAREHOUSE_WEIGHTS (
		WAREHOUSE_SIZE VARCHAR NOT NULL,
		WAREHOUSE_TYPE VARCHAR,
		WAREHOUSE_WEIGHT NUMBER NOT NULL
		);

INSERT INTO SF_WAREHOUSE_WEIGHTS (
	WAREHOUSE_SIZE,
	WAREHOUSE_TYPE,
	WAREHOUSE_WEIGHT
	)
SELECT x.$1,
	x.$2,
	x.$3 
FROM 
VALUES ('X-Small','STANDARD',1),
('Small','STANDARD',2),
('Medium','STANDARD',4),
('Large','STANDARD',8),
('X-Large','STANDARD',16),
('2X-Large','STANDARD',32),
('3X-Large','STANDARD',64),
('4X-Large','STANDARD',128),
('5X-Large','STANDARD',256),
('6X-Large','STANDARD',512),
('Medium','SNOWPARK-OPTIMIZED',6),
('Large','SNOWPARK-OPTIMIZED',12),
('X-Large','SNOWPARK-OPTIMIZED',24),
('2X-Large','SNOWPARK-OPTIMIZED',48),
('3X-Large','SNOWPARK-OPTIMIZED',96),
('4X-Large','SNOWPARK-OPTIMIZED',192),
('5X-Large','SNOWPARK-OPTIMIZED',384),
('6X-Large','SNOWPARK-OPTIMIZED',768) x
LEFT JOIN SF_WAREHOUSE_WEIGHTS W ON W.WAREHOUSE_SIZE = X.$1 AND W.WAREHOUSE_TYPE = X.$2
WHERE w.warehouse_size IS NULL;
